@x Admonition 定義を最終段に追加
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# The Python Packaging Guide documentation build configuration file, created by
# sphinx-quickstart on Sun Dec 13 14:07:23 2009.
#
# This file is execfile()d with the current directory set to its containing
# dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
@y
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# The Python Packaging Guide documentation build configuration file, created by
# sphinx-quickstart on Sun Dec 13 14:07:23 2009.
#
# This file is execfile()d with the current directory set to its containing
# dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
@z

@x
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
@y
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
@z

@x
# -- General configuration ------------------------------------------------
@y
# -- General configuration ------------------------------------------------
@z

@x
# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'
@y
# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'
@z

@x
# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.extlinks',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx_inline_tabs',
]
@y
# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.extlinks',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx_inline_tabs',
]
@z

@x
# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']
@y
# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']
@z

@x
# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'
@y
# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'
@z

@x
# The encoding of source files.
#
# source_encoding = 'utf-8-sig'
@y
# The encoding of source files.
#
# source_encoding = 'utf-8-sig'
@z

@x
# The master toctree document.
master_doc = 'index'
@y
# The master toctree document.
master_doc = 'index'
@z

@x
# -- Project information -----------------------------------------------------
@y
# -- Project information -----------------------------------------------------
@z

@x
github_url = 'https://github.com'
github_repo_org = 'pypa'
github_repo_name = 'packaging.python.org'
github_repo_slug = f'{github_repo_org}/{github_repo_name}'
github_repo_url = f'{github_url}/{github_repo_slug}'
github_repo_issues_url = f'{github_url}/{github_repo_slug}/issues'
github_sponsors_url = f'{github_url}/sponsors'
@y
github_url = 'https://github.com'
github_repo_org = 'pypa'
github_repo_name = 'packaging.python.org'
github_repo_slug = f'{github_repo_org}/{github_repo_name}'
github_repo_url = f'{github_url}/{github_repo_slug}'
github_repo_issues_url = f'{github_url}/{github_repo_slug}/issues'
github_sponsors_url = f'{github_url}/sponsors'
@z

@x
# General information about the project.
project = u'Python Packaging User Guide'
copyright = u'2013–2020, PyPA'
author = 'Python Packaging Authority'
@y
# General information about the project.
project = u'Python Packaging User Guide'
copyright = u'2013–2020, PyPA'
author = 'Python Packaging Authority'
@z

@x
# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = ''
# The full version, including alpha/beta/rc tags.
release = ''
@y
# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = ''
# The full version, including alpha/beta/rc tags.
release = ''
@z

@x
# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None
@y
# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None
@z

@x
# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#
# today = ''
#
# Else, today_fmt is used as the format for a strftime call.
#
# today_fmt = '%B %d, %Y'
@y
# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#
# today = ''
#
# Else, today_fmt is used as the format for a strftime call.
#
# today_fmt = '%B %d, %Y'
@z

@x
# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']
@y
# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']
@z

@x
# The reST default role (used for this markup: `text`) to use for all
# documents.
# Ref: python-attrs/attrs#571
default_role = 'any'  # makes single backticks autofind targets
@y
# The reST default role (used for this markup: `text`) to use for all
# documents.
# Ref: python-attrs/attrs#571
default_role = 'any'  # makes single backticks autofind targets
@z

@x
# If true, '()' will be appended to :func: etc. cross-reference text.
#
# add_function_parentheses = True
@y
# If true, '()' will be appended to :func: etc. cross-reference text.
#
# add_function_parentheses = True
@z

@x
# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#
# add_module_names = False
@y
# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#
# add_module_names = False
@z

@x
# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#
# show_authors = False
@y
# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#
# show_authors = False
@z

@x
# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'
@y
# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'
@z

@x
# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []
@y
# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []
@z

@x
# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False
@y
# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False
@z

@x
# If true, `todo` and `todoList` produce output, else they produce nothing.
# todo_include_todos = False
@y
# If true, `todo` and `todoList` produce output, else they produce nothing.
# todo_include_todos = False
@z

@x
# -- Options for HTML output ----------------------------------------------
@y
# -- Options for HTML output ----------------------------------------------
@z

@x
# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'pypa_theme'
@y
# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'pypa_theme'
@z

@x
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'collapsiblesidebar': True,
    'externalrefs': True,
    'navigation_depth': 2,
    'issues_url': github_repo_issues_url,
}
@y
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'collapsiblesidebar': True,
    'externalrefs': True,
    'navigation_depth': 2,
    'issues_url': github_repo_issues_url,
}
@z

@x
# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = ['themes']
@y
# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = ['themes']
@z

@x
# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
html_title = 'Python Packaging User Guide'
@y
# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
html_title = 'Python Packaging User Guide'
@z

@x
# A shorter title for the navigation bar.  Default is the same as html_title.
#
# html_short_title = None
@y
# A shorter title for the navigation bar.  Default is the same as html_title.
#
# html_short_title = None
@z

@x
# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
# html_logo = None
@y
# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
# html_logo = None
@z

@x
# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#
# html_favicon = None
@y
# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#
# html_favicon = None
@z

@x
# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']
@y
# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']
html_static_path = ['static']
@z

@x
# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#
# html_extra_path = []
@y
# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#
# html_extra_path = []
@z

@x
# If not None, a 'Last updated on:' timestamp is inserted at every page
# bottom, using the given strftime format.
# The empty string is equivalent to '%b %d, %Y'.
#
html_last_updated_fmt = ''
@y
# If not None, a 'Last updated on:' timestamp is inserted at every page
# bottom, using the given strftime format.
# The empty string is equivalent to '%b %d, %Y'.
#
html_last_updated_fmt = ''
@z

@x
# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#
# html_use_smartypants = True
@y
# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#
# html_use_smartypants = True
@z

@x
# Custom sidebar templates, maps document names to template names.
#
@y
# Custom sidebar templates, maps document names to template names.
#
@z

@x
# Custom sidebar templates, filenames relative to this file.
html_sidebars = {
    '**': ['globaltoc.html', 'relations.html'],
    'index': ['globaltoc.html']
}
@y
# Custom sidebar templates, filenames relative to this file.
html_sidebars = {
    '**': ['globaltoc.html', 'relations.html'],
    'index': ['globaltoc.html']
}
@z

@x
# Additional templates that should be rendered to pages, maps page names to
# template names.
#
# html_additional_pages = {}
@y
# Additional templates that should be rendered to pages, maps page names to
# template names.
#
# html_additional_pages = {}
@z

@x
# If false, no module index is generated.
#
# html_domain_indices = True
@y
# If false, no module index is generated.
#
# html_domain_indices = True
@z

@x
# If false, no index is generated.
#
# html_use_index = True
@y
# If false, no index is generated.
#
# html_use_index = True
@z

@x
# If true, the index is split into individual pages for each letter.
#
# html_split_index = False
@y
# If true, the index is split into individual pages for each letter.
#
# html_split_index = False
@z

@x
# If true, links to the reST sources are added to the pages.
#
# html_show_sourcelink = True
@y
# If true, links to the reST sources are added to the pages.
#
# html_show_sourcelink = True
@z

@x
# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#
# html_show_sphinx = True
@y
# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#
# html_show_sphinx = True
@z

@x
# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#
# html_show_copyright = True
@y
# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#
# html_show_copyright = True
@z

@x
# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#
# html_use_opensearch = ''
@y
# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#
# html_use_opensearch = ''
@z

@x
# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None
@y
# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None
@z

@x
# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'h', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'r', 'sv', 'tr', 'zh'
#
# html_search_language = 'en'
@y
# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'h', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'r', 'sv', 'tr', 'zh'
#
# html_search_language = 'en'
@z

@x
# A dictionary with options for the search language support, empty by default.
# 'ja' uses this config value.
# 'zh' user can custom change `jieba` dictionary path.
#
# html_search_options = {'type': 'default'}
@y
# A dictionary with options for the search language support, empty by default.
# 'ja' uses this config value.
# 'zh' user can custom change `jieba` dictionary path.
#
# html_search_options = {'type': 'default'}
@z

@x
# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#
# html_search_scorer = 'scorer.js'
@y
# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#
# html_search_scorer = 'scorer.js'
@z

@x
# Output file base name for HTML help builder.
htmlhelp_basename = 'pythonpackagingguide-authdoc'
@y
# Output file base name for HTML help builder.
htmlhelp_basename = 'pythonpackagingguide-authdoc'
@z

@x
# -- Options for LaTeX output ---------------------------------------------
@y
# -- Options for LaTeX output ---------------------------------------------
@z

@x
latex_elements = {
     # The paper size ('letterpaper' or 'a4paper').
     #
     # 'papersize': 'letterpaper',
@y
latex_elements = {
     # The paper size ('letterpaper' or 'a4paper').
     #
     # 'papersize': 'letterpaper',
@z

@x
     # The font size ('10pt', '11pt' or '12pt').
     #
     # 'pointsize': '10pt',
@y
     # The font size ('10pt', '11pt' or '12pt').
     #
     # 'pointsize': '10pt',
@z

@x
     # Additional stuff for the LaTeX preamble.
     #
     # 'preamble': '',
@y
     # Additional stuff for the LaTeX preamble.
     #
     # 'preamble': '',
@z

@x
     # Latex figure (float) alignment
     #
     # 'figure_align': 'htbp',
}
@y
     # Latex figure (float) alignment
     #
     # 'figure_align': 'htbp',
}
@z

@x
# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'pythonpackagingguide.tex', 'Python Packaging User Guide',
     'Python Packaging Authority', 'manual'),
]
@y
# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'pythonpackagingguide.tex', 'Python Packaging User Guide',
     'Python Packaging Authority', 'manual'),
]
@z

@x
# The name of an image file (relative to this directory) to place at the top of
# the title page.
#
# latex_logo = None
@y
# The name of an image file (relative to this directory) to place at the top of
# the title page.
#
# latex_logo = None
@z

@x
# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#
# latex_use_parts = False
@y
# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#
# latex_use_parts = False
@z

@x
# If true, show page references after internal links.
#
# latex_show_pagerefs = False
@y
# If true, show page references after internal links.
#
# latex_show_pagerefs = False
@z

@x
# If true, show URL addresses after external links.
#
# latex_show_urls = False
@y
# If true, show URL addresses after external links.
#
# latex_show_urls = False
@z

@x
# Documents to append as an appendix to all manuals.
#
# latex_appendices = []
@y
# Documents to append as an appendix to all manuals.
#
# latex_appendices = []
@z

@x
# It false, will not define \strong, \code,     itleref, \crossref ... but only
# \sphinxstrong, ..., \sphinxtitleref, ... To help avoid clash with user added
# packages.
#
# latex_keep_old_macro_names = True
@y
# It false, will not define \strong, \code,     itleref, \crossref ... but only
# \sphinxstrong, ..., \sphinxtitleref, ... To help avoid clash with user added
# packages.
#
# latex_keep_old_macro_names = True
@z

@x
# If false, no module index is generated.
#
# latex_domain_indices = True
@y
# If false, no module index is generated.
#
# latex_domain_indices = True
@z

@x
# -- Options for manual page output ---------------------------------------
@y
# -- Options for manual page output ---------------------------------------
@z

@x
# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'pythonpackagingguide', 'Python Packaging User Guide',
     [author], 1)
]
@y
# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'pythonpackagingguide', 'Python Packaging User Guide',
     [author], 1)
]
@z

@x
# If true, show URL addresses after external links.
#
# man_show_urls = False
@y
# If true, show URL addresses after external links.
#
# man_show_urls = False
@z

@x
# -- Options for Texinfo output -------------------------------------------
@y
# -- Options for Texinfo output -------------------------------------------
@z

@x
# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'pythonpackagingguide', 'Python Packaging User Guide',
     author, 'pythonpackagingguide', 'One line description of project.',
     'Miscellaneous'),
]
@y
# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'pythonpackagingguide', 'Python Packaging User Guide',
     author, 'pythonpackagingguide', 'One line description of project.',
     'Miscellaneous'),
]
@z

@x
# Documents to append as an appendix to all manuals.
#
# texinfo_appendices = []
@y
# Documents to append as an appendix to all manuals.
#
# texinfo_appendices = []
@z

@x
# If false, no module index is generated.
#
# texinfo_domain_indices = True
@y
# If false, no module index is generated.
#
# texinfo_domain_indices = True
@z

@x
# How to display URL addresses: 'footnote', 'no', or 'inline'.
#
# texinfo_show_urls = 'footnote'
@y
# How to display URL addresses: 'footnote', 'no', or 'inline'.
#
# texinfo_show_urls = 'footnote'
@z

@x
# If true, do not generate a @detailmenu in the "Top" node's menu.
#
# texinfo_no_detailmenu = False
@y
# If true, do not generate a @detailmenu in the "Top" node's menu.
#
# texinfo_no_detailmenu = False
@z

@x
# -- Options for extlinks extension ---------------------------------------
extlinks = {
    'issue': (f'{github_repo_issues_url}/%s', '#'),  # noqa: WPS323
    'pr': (f'{github_repo_url}/pull/%s', 'PR #'),  # noqa: WPS323
    'commit': (f'{github_repo_url}/commit/%s', ''),  # noqa: WPS323
    'gh': (f'{github_url}/%s', 'GitHub: '),  # noqa: WPS323
    'user': (f'{github_sponsors_url}/%s', '@'),  # noqa: WPS323
}
@y
# -- Options for extlinks extension ---------------------------------------
extlinks = {
    'issue': (f'{github_repo_issues_url}/%s', '#'),  # noqa: WPS323
    'pr': (f'{github_repo_url}/pull/%s', 'PR #'),  # noqa: WPS323
    'commit': (f'{github_repo_url}/commit/%s', ''),  # noqa: WPS323
    'gh': (f'{github_url}/%s', 'GitHub: '),  # noqa: WPS323
    'user': (f'{github_sponsors_url}/%s', '@'),  # noqa: WPS323
}
@z

@x
# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'python2': ('https://docs.python.org/2', None),
    'pip': ('https://pip.pypa.io/en/latest/', None),
    'setuptools': ('https://setuptools.rtfd.io/en/latest/', None),
    'twine': ('https://twine.rtfd.io/en/stable/', None),
}
@y
# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'python2': ('https://docs.python.org/2', None),
    'pip': ('https://pip.pypa.io/en/latest/', None),
    'setuptools': ('https://setuptools.rtfd.io/en/latest/', None),
    'twine': ('https://twine.rtfd.io/en/stable/', None),
}
@z

@x
# If this is True, todo and todolist produce output, else they produce nothing.
# The default is False.
@y
# If this is True, todo and todolist produce output, else they produce nothing.
# The default is False.
@z

@x
todo_include_todos = True
@y
todo_include_todos = True
@z

@x
nitpicky = True
@y
nitpicky = True
@z

@x
# NOTE: consider having a separate ignore file
# Ref: https://stackoverflow.com/a/30624034/595220
nitpick_ignore = [
    ('envvar', 'PATH'),
    ('py:func', 'find_packages'),
    ('py:func', 'pkg_resources.iter_entry_points'),
    ('py:func', 'setup'),
    ('py:func', 'setuptools.find_namespace_packages'),
    ('py:func', 'setuptools.find_packages'),
    ('py:func', 'setuptools.setup'),
]
@y
# NOTE: consider having a separate ignore file
# Ref: https://stackoverflow.com/a/30624034/595220
nitpick_ignore = [
    ('envvar', 'PATH'),
    ('py:func', 'find_packages'),
    ('py:func', 'pkg_resources.iter_entry_points'),
    ('py:func', 'setup'),
    ('py:func', 'setuptools.find_namespace_packages'),
    ('py:func', 'setuptools.find_packages'),
    ('py:func', 'setuptools.setup'),
]

from sphinx.locale import admonitionlabels
admonitionlabels['tip'] = u'ヒント'
admonitionlabels['note'] = u'メモ'
admonitionlabels['warning'] = u'注意'

html_baseurl = '/python-packaging-user-guide-ja'
@z
