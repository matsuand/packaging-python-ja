@x
.. _`PyPI mirrors and caches`:
@y
.. _`PyPI mirrors and caches`:
@z

@x
================================
Package index mirrors and caches
================================
@y
================================
Package index mirrors and caches
================================
@z

@x
:Page Status: Incomplete
:Last Reviewed: 2014-12-24
@y
:Page Status: Incomplete
:Last Reviewed: 2014-12-24
@z

@x
.. contents:: Contents
   :local:
@y
.. contents:: Contents
   :local:
@z

@x
Mirroring or caching of PyPI can be used to speed up local package installation,
allow offline work, handle corporate firewalls or just plain Internet flakiness.
@y
Mirroring or caching of PyPI can be used to speed up local package installation,
allow offline work, handle corporate firewalls or just plain Internet flakiness.
@z

@x
Three options are available in this area:
@y
Three options are available in this area:
@z

@x
1. pip provides local caching options,
2. devpi provides higher-level caching option, potentially shared amongst
   many users or machines, and
3. bandersnatch provides a local complete mirror of all PyPI :term:`packages
   <Distribution Package>`.
@y
1. pip provides local caching options,
2. devpi provides higher-level caching option, potentially shared amongst
   many users or machines, and
3. bandersnatch provides a local complete mirror of all PyPI :term:`packages
   <Distribution Package>`.
@z

@x
Caching with pip
----------------
@y
Caching with pip
----------------
@z

@x
pip provides a number of facilities for speeding up installation by using local
cached copies of :term:`packages <Distribution Package>`:
@y
pip provides a number of facilities for speeding up installation by using local
cached copies of :term:`packages <Distribution Package>`:
@z

@x
1. `Fast & local installs
   <https://pip.pypa.io/en/latest/user_guide/#installing-from-local-packages>`_
   by downloading all the requirements for a project and then pointing pip at
   those downloaded files instead of going to PyPI.
2. A variation on the above which pre-builds the installation files for
   the requirements using `python -m pip wheel
   <https://pip.readthedocs.io/en/latest/reference/pip_wheel.html>`_::
@y
1. `Fast & local installs
   <https://pip.pypa.io/en/latest/user_guide/#installing-from-local-packages>`_
   by downloading all the requirements for a project and then pointing pip at
   those downloaded files instead of going to PyPI.
2. A variation on the above which pre-builds the installation files for
   the requirements using `python -m pip wheel
   <https://pip.readthedocs.io/en/latest/reference/pip_wheel.html>`_::
@z

@x
    $ python -m pip wheel --wheel-dir=/tmp/wheelhouse SomeProject
    $ python -m pip install --no-index --find-links=/tmp/wheelhouse SomeProject
@y
    $ python -m pip wheel --wheel-dir=/tmp/wheelhouse SomeProject
    $ python -m pip install --no-index --find-links=/tmp/wheelhouse SomeProject
@z

@x
Caching with devpi
------------------
@y
Caching with devpi
------------------
@z

@x
devpi is a caching proxy server which you run on your laptop, or some other
machine you know will always be available to you. See the `devpi
documentation for getting started`__.
@y
devpi is a caching proxy server which you run on your laptop, or some other
machine you know will always be available to you. See the `devpi
documentation for getting started`__.
@z

@x
__ http://doc.devpi.net/latest/quickstart-pypimirror.html
@y
__ http://doc.devpi.net/latest/quickstart-pypimirror.html
@z

@x
Complete mirror with bandersnatch
----------------------------------
@y
Complete mirror with bandersnatch
----------------------------------
@z

@x
bandersnatch will set up a complete local mirror of all PyPI :term:`packages
<Distribution Package>` (externally-hosted packages are not mirrored). See
the `bandersnatch documentation for getting that going`__.
@y
bandersnatch will set up a complete local mirror of all PyPI :term:`packages
<Distribution Package>` (externally-hosted packages are not mirrored). See
the `bandersnatch documentation for getting that going`__.
@z

@x
__ https://github.com/pypa/bandersnatch/
@y
__ https://github.com/pypa/bandersnatch/
@z

@x
A benefit of devpi is that it will create a mirror which includes
:term:`packages <Distribution Package>` that are external to PyPI, unlike
bandersnatch which will only cache :term:`packages <Distribution Package>`
hosted on PyPI.
@y
A benefit of devpi is that it will create a mirror which includes
:term:`packages <Distribution Package>` that are external to PyPI, unlike
bandersnatch which will only cache :term:`packages <Distribution Package>`
hosted on PyPI.
@z
